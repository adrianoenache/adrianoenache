// Design Tokens
token = {
	breakpoint: {
		mobile: 414px,
		tablet: 1024px,
		desktop: 1440px
	},
	grid: {
		gutter: 14px,
		col-size: 50px,
		col-qtd-mobile: 5,
		col-qtd-tablet: 10,
		col-qtd-desktop: 15,
		col-qtd-wide: 20,
	},
	colors: {
		none: transparent,
		brand-01: #c00,
		brand-02: #ca0,
		brand-03: linear-gradient(to bottom, rgba(white, 1) 0%, rgba(black, 1) 100%),
		support-01: #000,
		support-02: #fff
	},
	shadown: {
		brand-01: 1px 1px 2px rgba(#000, .75),
	},
	gap: {
		none: 0,
		xxx-small: 5px,
		xx-small: 10px,
		x-small: 15x,
		small: 20px,
		s-medium: 30px,
		medium: 40px,
		l-medium: 50px,
		large: 70px,
		x-large: 90px,
		xx-large: 110px,
		xxx-large: 130px
	},
	radius: {
		none: 0,
		small: 4px,
		medium: 8px,
		large: 16px,
		full: 50%,
	},
	stroke-width: {
		none: 0,
		small: 2px,
		medium: 4px,
		large: 8px
	},
	stroke-offset: {
		none: 0,
		small: 2px,
		medium: 4px,
		large: 8px
	},
	font: {
		family: {
			brand-01: Verdana,
			brand-02: Arial,
			brand-03: Courier New
		},
		weight: {
			thin: 100,
			extra-light: 200,
			light: 300,
			normal: 400,
			medium: 500,
			semi-bol: 600,
			bold: 700,
			extra-bold: 800,
			black: 900
		},
		size: {
			none: 0,
			xxx-small: 10px,
			xx-small: 12px,
			x-small: 14px,
			small: 16px,
			s-medium: 18px,
			medium: 22px,
			l-medium: 26px,
			large: 30px,
			x-large: 38px,
			xx-large: 46px,
			xxx-large: 54px
		},
		line-height: {
			under: .75em,
			fit: 1em,
			between-01: 1.25em,
			between-02: 1.5em,
			between-03: 1.75em,
			double: 2em,
			above: 2.5em
		}
	},
	image-ratio: {
		r-1-1: 100%,
		landscape: {
			r-2-1: 50%,
			r-3-1: 33.33%,
			r-3-2: 66.66%,
			r-4-3: 75%,
			r-5-3: 60%,
			r-5-4: 80%,
			r-8-5: 62.5%,
			r-16-9: 56.25%,
			r-21-9: 42.86%,
		},
		portrait: {
			r-1-2: 200%,
			r-1-3: 300%,
			r-2-3: 150%,
			r-3-4: 133.33%,
			r-3-5: 166.67%,
			r-4-5: 125%,
			r-5-8: 160%,
			r-9-16: 177.78%,
			r-9-21: 233.33%,
		}
	}
}

//
tk = tk-not-found = "token-not-found";
tkc = tk-compoment-not-found = "token-compoment-not-found";

// Tokens Shortcut
tk-bk = token.breakpoint;
tk-gd = token.grid;
tk-c = token.colors;
tk-s = token.shadown;
tk-g = token.gap;
tk-r = token.radius;
tk-sw = token.stroke-width;
tk-so = token.stroke-offset;
tk-ff = token.font.family;
tk-fw = token.font.weight;
tk-fs = token.font.size;
tk-fl = token.font.line-height;
tk-ir = token.image-ratio;
tk-irl = token.image-ratio.landscape;
tk-irp = token.image-ratio.portrait;

components = {
	title-text: {
		color: tk-c.brand-02 || tk,
		font-family: tk-ff.brand-01 || tk,
		font-weight: tk-fw.normal || tk,
		font-height: tk-fl.fit || tk
	},
	body-text: {
		color: tk-c.support-02 || tk,
		font-family: tk-ff.brand-02 || tk,
		font-weight: tk-fw.normal || tk,
		line-height: tk-fl.between-02 || tk
	},
	button: {
		background: tk-c.brand-01 || tk,
		color: tk-c.support-02 || tk,
		font-family: tk-ff.brand-01 || tk,
		border-width: tk-sw.small || tk,
		hover: {
			background: tk-c.brand-02 || tk,
		},
		focus: {
			background: tk-c.support-01 || tk,
		}
	},
	cta: {
		background: rgba(tk-c.brand-01, 0) || tk,
		color: tk-c.brand-01 || tk,
		font-family: tk-ff.brand-02 || tk,
		border-width: tk-sw.medium || tk,
		hover: {
			background: rgba(tk-c.brand-01, 1) || tk,
			color: tk-c.support-02 || tk
		},
		focus: {
			background: tk-c.support-01 || tk,
			color: tk-c.brand-02 || tk
		}
	},
	hero-type-01: {
		text-shadow: tk-s.brand-01 || tk,
		button-size: tk-fs.small || tk,
		padding-x: tk-g.small || tk,
		mobile: {
			banner-format: tk-irp.r-3-4 || tk,
			title-size: tk-fs.medium || tk,
			text-size: tk-fs.x-small || tk
		},
		tablet: {
			padding-right: tk-irl.r-16-9 || tk,
			banner-format: tk-irl.r-16-9 || tk,
			title-size: tk-fs.large || tk,
			text-size: tk-fs.small || tk
		},
		desktop: {
			padding-right: tk-irl.r-3-1 || tk,
			banner-format: tk-irl.r-3-1 || tk,
			title-size: tk-fs.xx-large || tk,
			text-size: tk-fs.s-medium || tk
		}
	}
}

// Tokens Shortcut
component-title-text = components.title-text;
component-body-text = components.body-text;
component-button = components.button;
component-cta = components.cta;
component-hero-type-01 = components.hero-type-01;

//
mobile()
	@media screen and (max-width: tk-bk.mobile)
		{block}

tablet()
	@media screen and (min-width: (tk-bk.mobile + 1)) and (max-width: tk-bk.tablet)
		{block}

tabletMin()
	@media screen and (min-width: (tk-bk.mobile + 1))
		{block}

desktop()
	@media screen and (min-width: (tk-bk.tablet + 1)) and (max-width: tk-bk.desktop)
		{block}

desktopMin()
	@media screen and (min-width: (tk-bk.tablet + 1))
		{block}

wide()
	@media screen and (min-width: (tk-bk.desktop + 1))
		{block}

holder()
	box-sizing border-box;
	margin 0 auto;
	+mobile()
		max-width ((tk-gd.gutter + tk-gd.col-size) * tk-gd.col-qtd-mobile);
	+tablet()
		max-width ((tk-gd.gutter + tk-gd.col-size) * tk-gd.col-qtd-tablet);
	+desktop()
		max-width ((tk-gd.gutter + tk-gd.col-size) * tk-gd.col-qtd-desktop);
	+wide()
		max-width ((tk-gd.gutter + tk-gd.col-size) * tk-gd.col-qtd-wide);

.bleeding-left-right
	margin-left calc((((100vw - 100%) / 2)) * -1);
	margin-right calc((((100vw - 100%) / 2)) * -1);

.bleeding-left
	margin-left calc((((100vw - 100%) / 2)) * -1);

.bleeding-right
	margin-right calc((((100vw - 100%) / 2)) * -1);

.bleeding-background-left-right
	background black;
	margin-left calc((((100vw - 100%) / 2)) * -1);
	margin-right calc((((100vw - 100%) / 2)) * -1);
	padding-left calc((((100vw - 100%) / 2)));
	padding-right calc((((100vw - 100%) / 2)));

.bleeding-background-left
	background black;
	margin-left calc((((100vw - 100%) / 2)) * -1);
	padding-left calc((((100vw - 100%) / 2)));

.bleeding-background-right
	background black;
	margin-right calc((((100vw - 100%) / 2)) * -1);
	padding-right calc((((100vw - 100%) / 2)));

html
	overflow-x hidden;

body
	// Background power by Lea Verou
	// https://leaverou.github.io/css3patterns/
	background linear-gradient(27deg, #151515 5px, transparent 5px) 0 5px, linear-gradient(207deg, #151515 5px, transparent 5px) 10px 0px, linear-gradient(27deg, #222 5px, transparent 5px) 0px 10px, linear-gradient(207deg, #222 5px, transparent 5px) 10px 5px, linear-gradient(90deg, #1b1b1b 10px, transparent 10px), linear-gradient(#1d1d1d 25%, #1a1a1a 25%, #1a1a1a 50%, transparent 50%, transparent 75%, #242424 75%, #242424);
	background-color: #131313;
	background-size: 20px 20px;
	box-sizing border-box;
	min-width 320px;
	//
	color: component-body-text.color || tkc;
	font-family: component-body-text.font-family || tkc;
	font-weight: component-body-text.font-weight || tkc;
	line-height: component-body-text.line-height || tkc;

.holder
	holder()

h1, h2, h3, h4, h5, h6
	color: component-title-text.color || tkc;
	font-family: component-title-text.font-family || tkc;
	font-weight: component-title-text.font-weight || tkc;
	line-height: component-title-text.font-height || tkc;

hr
	border 0;
	border-top solid 1px;
	margin 2rem auto 4rem;

// Reset link
a
	&.reset
		text-decoration none;

//
figure
	display block;
	margin 0;
	width 100%;

picture
	display block;
	height 0;
	overflow hidden;
	position relative;

	img
		display block;
		height 100%;
		left 0;
		object-fit cover;
		position absolute;
		top 0;
		width 100%;

btn()
	align-items center;
	box-sizing border-box;
	cursor pointer;
	display inline-flex;
	justify-content center;
	outline 0;
	text-align center;
	text-shadow none;

.btn
	btn()
	border-radius .5em;
	line-height 1.25em;
	height ((@line-height * 2) + 0.2em);
	padding 0 1.5em;

.btn-square
	btn()
	border-radius .5em;
	line-height 1.25em;
	height ((@line-height * 2) + 0.2em);
	width @height

.btn-pill
	btn()
	line-height 1.25em;
	height ((@line-height * 2) + 0.2em);
	border-radius (@height / 2);
	padding 0 1.5em;

.btn-bullet
	btn()
	line-height 1.25em;
	height ((@line-height * 2) + 0.2em);
	border-radius (@height / 2);
	width @height

.button
	border-style solid;
	border-color inherit;
	background component-button.background || tkc;
	border-width component-button.border-width || tkc;
	color component-button.color || tkc;
	font-family component-button.font-family || tkc;
	transition background .3s ease-out
	&:hover
		background component-button.hover.background || tkc;
	&:focus
		background component-button.focus.background || tkc;
		&:hover
			background component-button.hover.background || tkc;

.cta
	border-style solid;
	border-color inherit;
	background component-cta.background || tkc;
	border-width component-cta.border-width || tkc;
	color component-cta.color || tkc;
	font-family component-cta.font-family || tkc;
	transition background .3s ease-out, color .3s ease-out
	&:hover
		background component-cta.hover.background || tkc;
		color component-cta.hover.color || tkc;
	&:focus
		background component-cta.focus.background || tkc;
		color component-cta.focus.color || tkc;
		&:hover
			background component-cta.hover.background || tkc;
			color component-cta.hover.color || tkc;

.hero
	position relative;

	.text-content
		box-sizing border-box;
		display flex;
		flex-direction column;
		justify-content center;
		height 100%;
		left 0;
		overflow hidden;
		position absolute;
		top 0;
		width 100%;

		h1, h2, h3, h4, h5, h6
			margin 0;

		p
			margin-bottom 0;

	&.type-01

		picture
			+mobile()
				padding-top component-hero-type-01.mobile.banner-format || tkc;
			+tablet()
				padding-top component-hero-type-01.tablet.banner-format || tkc;
			+desktopMin()
				padding-top component-hero-type-01.desktop.banner-format || tkc;

		.text-content
			padding-left component-hero-type-01.padding-x || tkc;
			padding-right @padding-left

			+desktopMin()
				padding-right component-hero-type-01.desktop.padding-right || tkc;

			h1, h2, h3, h4, h5, h6, p
				text-shadow component-hero-type-01.text-shadow || tkc;

			h1, h2, h3, h4, h5, h6
				+mobile()
					font-size component-hero-type-01.mobile.title-size || tkc;
				+tablet()
					font-size component-hero-type-01.tablet.title-size || tkc;
				+desktopMin()
					font-size component-hero-type-01.desktop.title-size || tkc;

			p
				+mobile()
					font-size component-hero-type-01.mobile.text-size || tkc;
				+tablet()
					font-size component-hero-type-01.tablet.text-size || tkc;
				+desktopMin()
					font-size component-hero-type-01.desktop.text-size || tkc;

			.button
				font-size component-hero-type-01.button-size || tkc;
